#!/bin/bash
set -e

gitlab_ce_bundle_config() {
  # Set bundler defaults
  exec_as_git bundle config --local ignore_messages true
  exec_as_git bundle config --local only_update_to_newer_versions true
  exec_as_git bundle config --local jobs $(nproc)
  exec_as_git bundle config --local clean true
  exec_as_git bundle config --local retry 3
  exec_as_git bundle config --local deployment true
  exec_as_git bundle config --local without development:test
}

# Patch gitlab-ce to use redis gem >= 3.3.3 to be compatible with ruby 2.4
gitlab_ce_update_redis_gem_to_latest() {
  echo "Updating redis gem to the latest version ... "
  exec_as_git bundle update redis --jobs=$(nproc)
  exec_as_git bundle lock
}

# Workaround for GitLab CE 9.1.4-1 build, https://gotfix.com/docker/gitlab/issues/111
gitlab_ce_lock_omniauth_google_oauth2() {
  echo "Locking omniauth-google-oauth2 gem ... "
  exec_as_git bundle lock --update=omniauth-google-oauth2
}

gitlab_ce_cleanup_tmp_cache() {
  exec_as_git bundle exec rake tmp:cache:clear  RAILS_ENV=production
}

gitlab_ce_cleanup_yarn_cache() {
  exec_as_git yarn cache clean NODE_ENV=production
}

gitlab_ce_cleanup_dir_post() {
  echo "Cleaning unused assets ... "
  rm -rf ${GITLAB_INSTALL_DIR}/.gitlab
  rm -rf ${GITLAB_INSTALL_DIR}/.github
  rm -rf ${GITLAB_INSTALL_DIR}/docker
  rm -rf ${GITLAB_INSTALL_DIR}/docker-compose.yml
}

# Function that is executed before build process starts
prebuild_gitlab_ce() {
  gitlab_ce_bundle_config
  return 0
}

# Function that is executed after build process is done
postbuild_gitlab_ce() {
  gitlab_ce_cleanup_dir_post
  gitlab_ce_cleanup_yarn_cache
  gitlab_ce_cleanup_tmp_cache
  return 0
}

